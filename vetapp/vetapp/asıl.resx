<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>